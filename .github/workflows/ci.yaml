on: [push, pull_request]

name: ci

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10
  FETCH_DEPTH: 0
  NIGHTLY_VERSION: nightly-2021-06-08

jobs:
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: clippy
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy

  build-test-x86_64-unknown-linux-gnu:
    name: build and test (x86_64-unknown-linux-gnu)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  build-test-x86_64-apple-darwin:
    name: build and test (x86_64-apple-darwin)
    runs-on: macos-latest
    # env:
      # SELECT_XCODE: /Applications/Xcode_12.2.app
    steps:
#      - name: Select XCode version
#        run: sudo xcode-select -s "${SELECT_XCODE}"
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test

  buuild-client-wasm32-unknown-unknown:
    name: build client (wasm32-unknown-unknown)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
      - name: Build client
        run: cd examples/wasm-client && wasm-pack build --target web
